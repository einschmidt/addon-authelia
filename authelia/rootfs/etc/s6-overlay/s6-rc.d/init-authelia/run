#!/command/with-contenv bashio
# shellcheck shell=bash
# ==============================================================================
# Home Assistant Add-on: Authelia
# Configures Authelia before running
# ==============================================================================

bashio::log.debug "Initializing Authelia environment variables..."

# Generate secrets
bashio::log.debug "Starting Authelia secrets check..."

# Define secrets path
SECRETS_PATH="/data/secrets"

if ! bashio::fs.directory_exists "$SECRETS_PATH"; then

    JWT_SECRET_FILE="/data/secrets/jwt_secret"
    if authelia crypto rand --length 64 --charset ascii --file "$JWT_SECRET_FILE"; then
        bashio::log.info "JWT secret generated and stored at $JWT_SECRET_FILE."
    else
        bashio::log.error "Failed to generate JWT secret!"
        exit 1
    fi

    # Debug output for the JWT secret path
    bashio::log.debug "JWT Secret File: $AUTHELIA_IDENTITY_VALIDATION_RESET_PASSWORD_JWT_SECRET_FILE"

    SESSION_SECRET_FILE="/data/secrets/session_secret"
    if authelia crypto rand --length 64 --charset ascii --file "$SESSION_SECRET_FILE"; then
        bashio::log.info "Session secret generated and stored at $SESSION_SECRET_FILE."
    else
        bashio::log.error "Failed to generate Session secret!"
        exit 1
    fi

    # Debug output for the Session secret path
    bashio::log.debug "Session Secret File: $AUTHELIA_SESSION_SECRET_FILE"

    STORAGE_SECRET_FILE="/data/secrets/storage_encryption_key"
        if authelia crypto rand --length 64 --charset ascii --file "$STORAGE_SECRET_FILE"; then
            bashio::log.info "Storage encryption key generated and stored at $STORAGE_SECRET_FILE."
        else
            bashio::log.error "Failed to generate Storage encryption key!"
            exit 1
        fi

        # Debug output for the Session secret path
        bashio::log.debug "Storage Secret File: $STORAGE_SECRET_FILE"

else
    bashio::log.debug "Secrets folder already exists. Skipping generation."
fi

bashio::log.debug "Starting Authelia configuration check..."

# Define paths
CONFIG_FILE="/config/config.yml"

# Ensure configuration exists
if ! bashio::fs.file_exists "$CONFIG_FILE"; then
    bashio::log.warning "Configuration file missing, start scaffolding..."

    # Fetching domain from configuration
    domain="$(bashio::config 'domain')"
    bashio::log.debug "Retrieved domain from config: $domain"

    # Use template to generate configuration.yml
    bashio::log.debug "Generating configuration.yml..."
    bashio::var.json \
        domain "$domain" \
        | tempio \
            -template /etc/s6-overlay/s6-rc.d/init-authelia/config.gtpl \
            -out /config/config.yml
    bashio::log.debug "configuration.yml generated successfully."

    # Use template to generate users.yml

    bashio::log.debug "Generating users.yml..."
    bashio::var.json \
        domain "$domain" \
        | tempio \
            -template /etc/s6-overlay/s6-rc.d/init-authelia/users.gtpl \
            -out /config/users.yml
    bashio::log.debug "users.yml generated successfully."

    # Debug output for the Storage secret path
    bashio::log.debug "Storage Secret File: $AUTHELIA_STORAGE_ENCRYPTION_KEY_FILE"

else
    bashio::log.debug "Existing configuration found at '$CONFIG_FILE'. Continuing startup..."
fi
