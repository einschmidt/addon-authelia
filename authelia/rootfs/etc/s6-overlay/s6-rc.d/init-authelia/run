#!/command/with-contenv bashio
# shellcheck shell=bash
# ==============================================================================
# Home Assistant Add-on: Authelia
# Configures Authelia before running
# ==============================================================================

bashio::log.debug "Initializing Authelia environment variables..."

# Set environment variables
export AUTHELIA_SERVER_ADDRESS="tcp://:9091"
export AUTHELIA_STORAGE_LOCAL_PATH="/data/db.sqlite3"

# Log the values of the environment variables
bashio::log.debug "AUTHELIA_SERVER_ADDRESS set to: ${AUTHELIA_SERVER_ADDRESS}"
bashio::log.debug "AUTHELIA_STORAGE_LOCAL_PATH set to: ${AUTHELIA_STORAGE_LOCAL_PATH}"

bashio::log.debug "Starting Authelia configuration check..."

# Define paths
CONFIG_FILE="/config/config.yml"

# Ensure configuration exists
if ! bashio::fs.file_exists "$CONFIG_FILE"; then
    bashio::log.warning "Configuration file missing, start scaffolding..."
    
    # Generating secrets
    bashio::log.debug "Generating JWT secret..."
    jwt_secret=$(authelia crypto hash generate argon2 --random --random.length 64 --random.charset alphanumeric --no-confirm | sed 's/Random Password: //g')
    bashio::log.debug "JWT secret generated successfully."

    bashio::log.debug "Generating Session secret..."
    session_secret=$(authelia crypto hash generate argon2 --random --random.length 64 --random.charset alphanumeric --no-confirm | sed 's/Random Password: //g')
    bashio::log.debug "Session secret generated successfully."

    bashio::log.debug "Generating Storage secret..."
    storage_secret=$(authelia crypto hash generate argon2 --random --random.length 64 --random.charset alphanumeric --no-confirm | sed 's/Random Password: //g')
    bashio::log.debug "Storage secret generated successfully."

    # Debugging generated secrets (Masked for security)
    bashio::log.debug "Generated secrets (masked): JWT=${jwt_secret:0:6}..., Session=${session_secret:0:6}..., Storage=${storage_secret:0:6}..."

    # Fetching domain from configuration
    domain="$(bashio::config 'domain')"
    bashio::log.debug "Retrieved domain from config: $domain"

    # Use template to generate configuration.yml
    bashio::log.debug "Generating configuration.yml..."
    bashio::var.json \
        jwt_secret "$jwt_secret" \
        session_secret "$session_secret" \
        storage_secret "$storage_secret" \
        domain "$domain" \
        | tempio \
            -template /etc/s6-overlay/s6-rc.d/init-authelia/config.gtpl \
            -out /config/config.yml
    bashio::log.debug "configuration.yml generated successfully."

    # Use template to generate users.yml
    bashio::log.debug "Generating users.yml..."
    bashio::var.json \
        domain "$domain" \
        | tempio \
            -template /etc/s6-overlay/s6-rc.d/init-authelia/users.gtpl \
            -out /config/users.yml
    bashio::log.debug "users.yml generated successfully."

else
    bashio::log.debug "Existing configuration found at '$CONFIG_FILE'. Continuing startup..."
fi
